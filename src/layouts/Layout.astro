---
import "../styles/global.css";
import SocialLinks from "../components/SocialLinks.astro";
import {
  navigationConfig,
  getSidebarNavigation,
  isActiveLink,
} from "../config/navigation";

export interface Props {
  title: string;
  description?: string;
}
const {
  title,
  description = "We are a dedicated team of JPMC employees devoted to a simple mission: Better working conditions for all JPMC employees worldwide.",
} = Astro.props;

// Get current path for active link detection
const currentPath = Astro.url.pathname;

// Get navigation sections for sidebar
const sidebarNavigation = getSidebarNavigation();
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/img/96x96.png" />
    <title>{title}</title>

    <!-- PWA Meta Tags -->
    <meta name="theme-color" content="#1d4ed8" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="apple-mobile-web-app-title" content="JWA" />
    <link rel="apple-touch-icon" href="/img/96x96.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="bg-jpmc-light dark:bg-gray-900 text-jpmc-dark dark:text-gray-100 min-h-screen transition-colors duration-200"
  >
    <div class="flex flex-col min-h-screen">
      <!-- Header -->
      <header
        class="bg-white shadow-lg border-b-4 border-jpmc-blue transition-colors duration-200 dark:bg-jpmc-gray-800"
      >
        <div class="container mx-auto lg:px-4 py-4">
          <div class="flex items-center stretch justify-between">
            <!-- Logo -->
            <div class="flex items-center space-x-4">
              <img
                src="/img/96x96.png"
                alt="JPMC Workers Alliance Logo"
                class="w-12 h-12"
              />
              <div class="hidden md:block">
                <div class="text-xl font-bold text-jpmc-blue">JPMC</div>
                <div class="text-lg font-semibold text-jpmc-red">WORKERS</div>
                <div class="text-sm font-medium text-jpmc-gold">ALLIANCE</div>
              </div>
            </div>

            <!-- Page Title -->
            <div class="flex-1 text-center hidden md:block">
              <h1
                class="text-2xl font-bold text-jpmc-dark dark:text-gray-100 md:text-xl"
              >
                {title}
              </h1>
            </div>

            <!-- Mobile menu button -->
            <button
              class="lg:hidden p-2"
              id="mobile-menu-button"
              aria-label="Toggle navigation menu"
              aria-expanded="false"
              aria-controls="mobile-menu"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                aria-hidden="true"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Mobile menu -->
        <nav
          class="md:hidden hidden"
          id="mobile-menu"
          aria-label="Mobile navigation"
          data-testid="mobile-menu"
        >
          <div class="px-4 py-2 space-y-2 bg-jpmc-gray-50 dark:bg-gray-500">
            {
              Object.values(navigationConfig)
                .flat()
                .filter((item) => !item.skipMobile)
                .map((item) => (
                  <a
                    href={item.href}
                    class={`block py-2 font-medium transition-colors ${
                      isActiveLink(currentPath, item.href)
                        ? "text-jpmc-blue font-semibold"
                        : "text-jpmc-dark hover:text-jpmc-blue"
                    }`}
                  >
                    {item.label}
                  </a>
                ))
            }
          </div>
        </nav>
      </header>

      <!-- Main content with sidebar -->
      <div class="flex flex-1">
        <!-- Sidebar -->
        <aside
          class="w-64 bg-white dark:bg-gray-800 shadow-lg border-r border-gray-200 dark:border-gray-700 hidden lg:block transition-colors duration-200"
          aria-label="Sidebar navigation"
        >
          <div class="p-6">
            <!-- Navigation Links -->
            <nav class="space-y-4">
              {
                sidebarNavigation.map((section) => (
                  <div class="space-y-2">
                    <h3
                      class={`text-sm font-medium text-${section.color} uppercase tracking-wide`}
                    >
                      {section.title}
                    </h3>
                    <ul class="space-y-1">
                      {section.items.map((item) => (
                        <li>
                          <a
                            href={item.href}
                            class={`block py-2 px-3 rounded-md transition-colors ${
                              isActiveLink(currentPath, item.href)
                                ? `text-${section.color} bg-${section.color === "jpmc-blue" ? "jpmc-gray-50" : "jpmc-gray-50"} dark:bg-gray-700 font-semibold`
                                : `text-jpmc-dark dark:text-gray-200 hover:text-${section.color} hover:bg-jpmc-gray-50 dark:hover:bg-gray-700`
                            }`}
                          >
                            {item.label}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                ))
              }
            </nav>

            <!-- Social Links -->
            <div>
              <SocialLinks variant="sidebar" />
            </div>
          </div>
        </aside>

        <!-- Main content area -->
        <main
          class="flex-1 bg-jpmc-gray-50 dark:bg-gray-900 transition-colors duration-200"
        >
          <div class="container mx-auto px-4 py-8">
            <!-- Mobile page title -->
            <div class="lg:hidden mb-6">
              <h1 class="text-2xl font-bold text-jpmc-dark dark:text-gray-100">
                {title}
              </h1>
            </div>

            <!-- Content slot -->
            <slot />
          </div>
        </main>
      </div>

      <!-- Footer -->
      <footer
        class="bg-jpmc-gray-100 dark:bg-gray-800 text-jpmc-gray-800 dark:text-gray-200 py-8 transition-colors duration-200 shadow"
      >
        <div class="container mx-auto px-4">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            <!-- Logo and description -->
            <div class="space-y-4">
              <div class="flex items-center space-x-3">
                <img
                  src="img/96x96.png"
                  alt="JPMC Workers Alliance Logo"
                  class="w-10 h-10"
                />
                <div>
                  <div class="font-bold text-jpmc-blue">JPMC</div>
                  <div class="font-semibold text-jpmc-red">WORKERS</div>
                  <div class="font-medium text-jpmc-gold">ALLIANCE</div>
                </div>
              </div>
              <p class="text-sm">
                Better working conditions for all JPMC employees worldwide.
              </p>
            </div>

            <!-- Quick links -->
            <div class="space-y-4">
              <h2 class="font-semibold text-jpmc-gold dark:text-jpmc-gold-400">
                Quick Links
              </h2>
              <ul class="space-y-2 text-sm">
                {
                  navigationConfig.footer.map((item) => (
                    <li>
                      <a
                        href={item.href}
                        class="hover:text-jpmc-blue transition-colors"
                      >
                        {item.label}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>

            <!-- Social links -->
            <SocialLinks variant="footer" />
          </div>

          <div
            class="border-t border-gray-700 dark:border-gray-600 mt-8 pt-8 text-center text-sm text-jpmc-gray-600 dark:text-gray-400"
          >
            <p>&copy; 2025 JPMC Workers Alliance. All rights reserved.</p>
            <p class="mt-2">
              See any broken links? Write to jpmcWorkers at gmail dot com.
            </p>
          </div>
        </div>
      </footer>
    </div>

    <script>
      // Auto-detect system dark mode preference and apply dark class
      /* off for now
       if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
         document.documentElement.classList.add('dark');
       }
       
       // Listen for changes in system preference
       window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
         if (e.matches) {
           document.documentElement.classList.add('dark');
         } else {
           document.documentElement.classList.remove('dark');
         }
       }); //*/

      // Mobile menu toggle
      const mobileMenuButton = document.getElementById("mobile-menu-button");
      const mobileMenu = document.getElementById("mobile-menu");

      mobileMenuButton?.addEventListener("click", () => {
        const isHidden = mobileMenu?.classList.toggle("hidden");
        mobileMenuButton.setAttribute(
          "aria-expanded",
          isHidden ? "false" : "true"
        );
      });
    </script>

    <script>
      import { registerSW } from "virtual:pwa-register";

      const updateSW = registerSW({
        onNeedRefresh() {
          if (confirm("New content available. Reload?")) {
            updateSW(true);
          }
        },
        onOfflineReady() {
          console.log("App ready to work offline");
          // Optional: Show a toast notification
          const notification = document.createElement("div");
          notification.textContent = "✅ App is ready to work offline!";
          notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            z-index: 1000;
            font-weight: 500;
          `;
          document.body.appendChild(notification);
          setTimeout(() => notification.remove(), 5000);
        },
      });
    </script>
  </body>
</html>

<script is:inline>
  console.log("currentUrl", window.location.href);
  // get the current url, if it matches the redirect object, then redirect to the new url
  const currentUrl = window.location.pathname;
  const redirectObject = {
    "/mgr": "/resources/mgr",
    "/qa": "/resources/qa",
    "/gender": "/resources/cigna",
    "/aeiou": "/resources/aeiou",
    "/issues": "/resources/issues",
    "/join_us": "/resources/join-us",
    "/discord": "https://bit.ly/jpmcworkers",
  };
  if (redirectObject[currentUrl]) {
    console.warn(
      `The link ${currentUrl} is no longer valid, re-directing to ${redirectObject[currentUrl]}`
    );
    window.location.href = redirectObject[currentUrl];
  }

  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOMContentLoaded");
    if (redirectObject[currentUrl]) {
      console.warn(
        `The link ${currentUrl} is no longer valid, re-directing to ${redirectObject[currentUrl]}`
      );
      window.location.href =
        redirectObject[currentUrl] + window.location.search;
    }
  });
</script>
